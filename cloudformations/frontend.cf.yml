AWSTemplateFormatVersion: "2010-09-09"
Description: Create frontend base

################# Input parameters ###############
Parameters:
  Prefix:
    Default: sbcntr
    Type: String
  Suffix:
    Default: koyama
    Type: String
  VpcId:
    Description : Input 'sbcntr' VPC ID
    Type: AWS::EC2::VPC::Id
# ALB
  ALBSecurityGroupId:
    Description: Input 'ingress' SecurityGroup ID
    Type: AWS::EC2::SecurityGroup::Id
  ALBSubnetId1:
    Description : Input 'ingress' Subnet ID for ap-northeast-1a
    Type : AWS::EC2::Subnet::Id
  ALBSubnetId2:
    Description : Input 'ingress' Subnet ID for ap-northeast-1c
    Type : AWS::EC2::Subnet::Id
# Backend loadbalancer
  BackendHost:
    Description : Input DNS A record of backend ALB
    Type: String
    Default: internal-sbcntr-alb-internal-XXXXXXXXX.ap-northeast-1.elb.amazonaws.com


Resources:
  ############### ECS ###############
  sbcntrECSClusterFrontend:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${Prefix}-frontend-cluster-${Suffix}"
  sbcntrTaskDefinitionFrontend:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${Prefix}-frontend-def-${Suffix}"
      ContainerDefinitions:
        - Name: app
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/sbcntr-frontend-${Suffix}:v1"
          Essential: true
          Cpu: 256
          MemoryReservation: 512
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
          Environment:
            - Name: SESSION_SECRET_KEY
              Value: 41b678c65b37bf99c37bcab522802760
            - Name: APP_SERVICE_HOST
              Value: !Sub "http://${BackendHost}"
            - Name: NOTIF_SERVICE_HOST
              Value: !Sub "http://${BackendHost}"
          LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: !Sub "/ecs/${Prefix}-frontend-def-${Suffix}"
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: ecs
      Cpu: 512
      Memory: 1024
      ExecutionRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
  sbcntrCloudWatchLogsFrontend:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/sbcntr-frontend-def-${Suffix}"
      RetentionInDays: 14
    UpdateReplacePolicy: Retain

  ############### Application Load Balancer ###############
  sbcntrAlbFrontend:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "${Prefix}alb-ingress-front-${Suffix}"
      Type: application
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSecurityGroupId
      Subnets:
        - !Ref ALBSubnetId1
        - !Ref ALBSubnetId2
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: false
  sbcntrTargetGroupFrontend:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "${Prefix}-tg-frontend-${Suffix}"
      Port: 80
      Protocol: HTTP
      TargetType: ip
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /healthcheck
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: 200
      VpcId: !Ref VpcId
  sbcntrFrontendListener1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
        DefaultActions:
          - TargetGroupArn: !Ref sbcntrTargetGroupFrontend
            Type: forward
        LoadBalancerArn: !Ref sbcntrAlbFrontend
        Port: 80
        Protocol: HTTP
